
Subject: lab 9 two

Vasista Kartikeya <ksvk5455@gmail.com>
1:08â€¯PM (1 hour ago)
to Vasista Kartikeya

You are viewing an attached message. Gmail can't verify the authenticity of attached messages.
#include <stdio.h>
#include <stdlib.h>

struct node {
  int coefficient;
  int power;
  struct node *next;
};

struct node *head1 = NULL;
struct node *head2 = NULL;

struct node *createNode(int coefficient, int power) {
  struct node *newNode = malloc(sizeof(struct node));
  newNode->coefficient = coefficient;
  newNode->power = power;
  newNode->next = NULL;
  return newNode;
}

void insertAtEnd(struct node **head, int coefficient, int power) {
  struct node *newNode = createNode(coefficient, power);
  if (*head == NULL) {
    *head = newNode;
  } else {
    struct node *temp = *head;
    while (temp->next != NULL) {
      temp = temp->next;
    }
    temp->next = newNode;
  }
}

void printPolynomial(struct node *head) {
  if (head == NULL) {
    printf("Empty polynomial.\n");
    return;
  }
  struct node *temp = head;
  while (temp != NULL) {
    printf("%d^%d ", temp->coefficient, temp->power);
    temp = temp->next;
  }
  printf("\n");
}

struct node *addPolynomials(struct node *head1, struct node *head2) {
  struct node *head3 = NULL;
  struct node *temp1 = head1;
  struct node *temp2 = head2;
  while (temp1 != NULL && temp2 != NULL) {
    if (temp1->power == temp2->power) {
      insertAtEnd(&head3, temp1->coefficient + temp2->coefficient, temp1->power);
      temp1 = temp1->next;
      temp2 = temp2->next;
    } else if (temp1->power > temp2->power) {
      insertAtEnd(&head3, temp1->coefficient, temp1->power);
      temp1 = temp1->next;
    } else {
      insertAtEnd(&head3, temp2->coefficient, temp2->power);
      temp2 = temp2->next;
    }
  }
  while (temp1 != NULL) {
    insertAtEnd(&head3, temp1->coefficient, temp1->power);
    temp1 = temp1->next;
  }
  while (temp2 != NULL) {
    insertAtEnd(&head3, temp2->coefficient, temp2->power);
    temp2 = temp2->next;
  }
  return head3;
}

int main() {
  // Create the first polynomial
  insertAtEnd(&head1, 1, 2);
  insertAtEnd(&head1, 2, 1);
  insertAtEnd(&head1, 3, 0);

  // Create the second polynomial
  insertAtEnd(&head2, 4, 2);
  insertAtEnd(&head2, 5, 1);
  insertAtEnd(&head2, 6, 0);

  // Print the first polynomial
  printf("First polynomial: ");
  printPolynomial(head1);

  // Print the second polynomial
  printf("Second polynomial: ");
  printPolynomial(head2);

  // Add the two polynomials
  struct node *head3 = addPolynomials(head1, head2);

  // Print the sum of the two polynomials
  printf("Sum of the two polynomials: ");
  printPolynomial(head3);

  return 0;
}

